#ifndef __CUBE_H__
#define __CUBE_H__
/*
created with obj2opengl.pl

source file    : ./cube.obj
vertices       : 8
faces          : 12
normals        : 6
texture coords : 22


// include generated arrays
#import "./cube.h"

// set input data to arrays
glVertexPointer(3, GL_FLOAT, 0, cubeVerts);
glNormalPointer(GL_FLOAT, 0, cubeNormals);
glTexCoordPointer(2, GL_FLOAT, 0, cubeTexCoords);

// draw data
glDrawArrays(GL_TRIANGLES, 0, cubeNumVerts);
*/

static unsigned int cubeNumVerts = 36;

static float cubeVerts [] = {
  // f 2/1/1 4/2/1 1/3/1
  0.499999812500094, -0.499999750000125, 0.499999625000187,
  -0.499999687500156, -0.499999750000125, -0.499999875000062,
  0.499999812500094, -0.499999750000125, -0.499999875000062,
  // f 8/4/2 6/5/2 5/6/2
  -0.499999687500156, 0.499999750000125, -0.499999875000062,
  0.499999312500344, 0.499999750000125, 0.500000124999937,
  0.499999812500094, 0.499999750000125, -0.499999375000312,
  // f 5/6/3 2/7/3 1/3/3
  0.499999812500094, 0.499999750000125, -0.499999375000312,
  0.499999812500094, -0.499999750000125, 0.499999625000187,
  0.499999812500094, -0.499999750000125, -0.499999875000062,
  // f 6/8/4 3/9/4 2/10/4
  0.499999312500344, 0.499999750000125, 0.500000124999937,
  -0.499999687500156, -0.499999750000125, 0.499999625000187,
  0.499999812500094, -0.499999750000125, 0.499999625000187,
  // f 3/11/5 8/12/5 4/13/5
  -0.499999687500156, -0.499999750000125, 0.499999625000187,
  -0.499999687500156, 0.499999750000125, -0.499999875000062,
  -0.499999687500156, -0.499999750000125, -0.499999875000062,
  // f 1/14/6 8/15/6 5/16/6
  0.499999812500094, -0.499999750000125, -0.499999875000062,
  -0.499999687500156, 0.499999750000125, -0.499999875000062,
  0.499999812500094, 0.499999750000125, -0.499999375000312,
  // f 2/1/1 3/17/1 4/2/1
  0.499999812500094, -0.499999750000125, 0.499999625000187,
  -0.499999687500156, -0.499999750000125, 0.499999625000187,
  -0.499999687500156, -0.499999750000125, -0.499999875000062,
  // f 8/4/2 7/18/2 6/5/2
  -0.499999687500156, 0.499999750000125, -0.499999875000062,
  -0.499999687500156, 0.499999750000125, 0.499999625000187,
  0.499999312500344, 0.499999750000125, 0.500000124999937,
  // f 5/6/3 6/19/3 2/7/3
  0.499999812500094, 0.499999750000125, -0.499999375000312,
  0.499999312500344, 0.499999750000125, 0.500000124999937,
  0.499999812500094, -0.499999750000125, 0.499999625000187,
  // f 6/8/4 7/20/4 3/9/4
  0.499999312500344, 0.499999750000125, 0.500000124999937,
  -0.499999687500156, 0.499999750000125, 0.499999625000187,
  -0.499999687500156, -0.499999750000125, 0.499999625000187,
  // f 3/11/5 7/21/5 8/12/5
  -0.499999687500156, -0.499999750000125, 0.499999625000187,
  -0.499999687500156, 0.499999750000125, 0.499999625000187,
  -0.499999687500156, 0.499999750000125, -0.499999875000062,
  // f 1/14/6 4/22/6 8/15/6
  0.499999812500094, -0.499999750000125, -0.499999875000062,
  -0.499999687500156, -0.499999750000125, -0.499999875000062,
  -0.499999687500156, 0.499999750000125, -0.499999875000062,
};

static float cubeNormals [] = {
  // f 2/1/1 4/2/1 1/3/1
  0, -1, 0,
  0, -1, 0,
  0, -1, 0,
  // f 8/4/2 6/5/2 5/6/2
  0, 1, 0,
  0, 1, 0,
  0, 1, 0,
  // f 5/6/3 2/7/3 1/3/3
  1, 0, 0,
  1, 0, 0,
  1, 0, 0,
  // f 6/8/4 3/9/4 2/10/4
  0, 0, 1,
  0, 0, 1,
  0, 0, 1,
  // f 3/11/5 8/12/5 4/13/5
  -1, 0, 0,
  -1, 0, 0,
  -1, 0, 0,
  // f 1/14/6 8/15/6 5/16/6
  0, 0, -1,
  0, 0, -1,
  0, 0, -1,
  // f 2/1/1 3/17/1 4/2/1
  0, -1, 0,
  0, -1, 0,
  0, -1, 0,
  // f 8/4/2 7/18/2 6/5/2
  0, 1, 0,
  0, 1, 0,
  0, 1, 0,
  // f 5/6/3 6/19/3 2/7/3
  1, 0, 0,
  1, 0, 0,
  1, 0, 0,
  // f 6/8/4 7/20/4 3/9/4
  0, 0, 1,
  0, 0, 1,
  0, 0, 1,
  // f 3/11/5 7/21/5 8/12/5
  -1, 0, 0,
  -1, 0, 0,
  -1, 0, 0,
  // f 1/14/6 4/22/6 8/15/6
  0, 0, -1,
  0, 0, -1,
  0, 0, -1,
};

static float cubeTangents [] = {
        // f 2/1/1 4/2/1 1/3/1
        0, 0, 1,
        0, 0, 1,
        0, 0, 1,
        // f 8/4/2 6/5/2 5/6/2
        0, 0, 1,
        0, 0, 1,
        0, 0, 1,
        // f 5/6/3 2/7/3 1/3/3
        0, 1, 0,
        0, 1, 0,
        0, 1, 0,
        // f 6/8/4 3/9/4 2/10/4
         1,0, 0,
         1,0, 0,
         1,0, 0,
        // f 3/11/5 8/12/5 4/13/5
         0, 1, 0,
         0, 1, 0,
         0, 1, 0,
        // f 1/14/6 8/15/6 5/16/6
        1,0, 0,
        1,0, 0,
        1,0, 0,
        // f 2/1/1 3/17/1 4/2/1
        0,  0,1,
        0,  0,1,
        0,  0,1,
        // f 8/4/2 7/18/2 6/5/2
        0,  0,1,
        0,  0,1,
        0,  0,1,
        // f 5/6/3 6/19/3 2/7/3
        0, 1, 0,
        0, 1, 0,
        0, 1, 0,
        // f 6/8/4 7/20/4 3/9/4
         1,0, 0,
         1,0, 0,
         1,0, 0,
        // f 3/11/5 7/21/5 8/12/5
       0, 1, 0,
       0, 1, 0,
       0, 1, 0,
        // f 1/14/6 4/22/6 8/15/6
         1,0, 0,
         1,0, 0,
         1,0, 0,
};

static float cubeBitangents [] = {
        // f 2/1/1 4/2/1 1/3/1
        1,0, 0,
        1,0, 0,
        1,0, 0,
        // f 8/4/2 6/5/2 5/6/2
        1,0, 0,
        1,0, 0,
        1,0, 0,
        // f 5/6/3 2/7/3 1/3/3
        0, 0,1,
        0, 0,1,
        0, 0,1,
        // f 6/8/4 3/9/4 2/10/4
        0, 1,0,
        0, 1,0,
        0, 1,0,
        // f 3/11/5 8/12/5 4/13/5
         0, 0,1,
         0, 0,1,
         0, 0,1,
        // f 1/14/6 8/15/6 5/16/6
        1,0, 0,
        1,0, 0,
        1,0, 0,
        // f 2/1/1 3/17/1 4/2/1
        1,0, 0,
        1,0, 0,
        1,0, 0,
        // f 8/4/2 7/18/2 6/5/2
        1,0,0,
        1,0,0,
        1,0,0,
        // f 5/6/3 6/19/3 2/7/3
         0, 0,1,
         0, 0,1,
         0, 0,1,
        // f 6/8/4 7/20/4 3/9/4
        0, 1,0,
        0, 1,0,
        0, 1,0,
        // f 3/11/5 7/21/5 8/12/5
        0, 0,1,
        0, 0,1,
        0, 0,1,
        // f 1/14/6 4/22/6 8/15/6
        0, 1,0,
        0, 1,0,
        0, 1,0,
};

static float cubeTexCoords [] = {
  // f 2/1/1 4/2/1 1/3/1
    0,0,
    0,1,
    1,1,
    1,1,
    1,0,
    0,0,
    0,0,
    0,1,
    1,1,
    1,1,
    1,0,
    0,0,
    0,0,
    0,1,
    1,1,
    1,1,
    1,0,
    0,0,
    0,0,
    0,1,
    1,1,
    1,1,
    1,0,
    0,0,
    0,0,
    0,1,
    1,1,
    1,1,
    1,0,
    0,0,
    0,0,
    0,1,
    1,1,
    1,1,
    1,0,
    0,0
};

#endif